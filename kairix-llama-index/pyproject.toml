[project]
name = "kairix-llama-index"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10,<3.11"
dependencies = [
    "llama-index-embeddings-huggingface>=0.5.4",
    "llama-index-llms-ollama>=0.6.2",
    "llama-index-llms-openai>=0.4.5",
    "llama-index-vector-stores-neo4jvector>=0.3.0",
    "ruff>=0.11.13",
    "ty>=0.0.1a9",
    "typeguard>=4.4.3",
]

[project.optional-dependencies]
dev = [
    "ty>=0.0.1a9",
    "ruff>=0.2.0",
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "ipython>=8.0.0",
    "typeguard>=4.1.5",
    "ruff-lsp>=0.0.53",
    "python-lsp-server>=1.11.0",
    "pyright>=1.1.350",
]

[build-system]
requires = ["uv_build>=0.7.8"]
build-backend = "uv_build"

# Ruff configuration
[tool.ruff]
target-version = "py310"
line-length = 88
fix = true
src = ["src"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
    "TCH",  # flake8-type-checking
    "RUF",  # Ruff-specific
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


# Pytest configuration with typeguard
[tool.pytest.ini_options]
addopts = [
    "--typeguard-packages=src",
    "--strict-markers",
    "-v",
]
testpaths = ["tests"]

# Typeguard configuration
[tool.typeguard]
# Automatically check all functions in your package
packages = ["src"]
# Forward references work automatically
forward_ref_policy = "RESOLVE"
# Check collection types deeply
collection_check_strategy = "ALL_ITEMS"
